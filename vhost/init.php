<?php
require_once 'validation.php';

class Init{

    private $domain;
    private $project_name;
    private $dir;

    public function __construct($domain = "", $project_name = "" , $dir = ""){
        $this->domain = $domain;
        $this->project_name = $project_name;
        $this->dir = $dir;
    }

    public function make(): array
    {
        $validation = new validation();

        //validate domain name
        while (empty(trim($this->domain)) || !preg_match('/^[a-zA-Z0-9.]+$/', $this->domain) || $validation->is_duplicate($this->domain)) {

            echo "Enter Domain Name: ";
            $this->domain = strtolower(trim(fgets(STDIN)));

            if (empty(trim($this->domain))) {
                echo "Error: Domain cannot be empty" . PHP_EOL;
            }

            if (!empty(trim($this->domain)) && !preg_match('/^[a-zA-Z0-9.]+$/', $this->domain)) {
                echo "Error: Can't contain spaces or any special characters except for a dot (.)" . PHP_EOL;
            }

            if ($validation->is_duplicate($this->domain)) {
                echo "Error: This virtual host already exists in your system" . PHP_EOL;
            }
        }

        //take input for the project name of the vhost and validate space and special characters
        while (empty(trim($this->project_name))) {

            echo "Enter your Project Name: ";
            $this->project_name = trim(fgets(STDIN));

            if (empty(trim($this->project_name))) {
                echo "Error: Project name cannot be empty" . PHP_EOL;
            }
        }

        //take directory input and validate
        while (empty(trim($this->dir)) || !is_dir($this->dir)) {

            echo "Enter Directory Path: ";
            $this->dir = trim(fgets(STDIN));

            if (empty(trim($this->dir))) {

                echo "Error: Directory cannot be empty" . PHP_EOL;

            }else{
                if (substr($this->dir, -1) != '/') {
                    $this->dir .= '/';
                }
            }

            if (!is_dir($this->dir)) {
                echo "Error: Invalid directory" . PHP_EOL;
            }

        }

        echo "Directory validated..." . PHP_EOL;
        echo "Initializing..." . PHP_EOL;

        //make the project directory
        try {
            if (!is_dir($this->dir . $this->project_name)) {

                if (!mkdir($this->dir . $this->project_name, 0775, true)) {
                    throw new Exception('An error occurred while making the project directory.' . PHP_EOL);
                }

                chown($this->dir . $this->project_name, get_current_user()); // update permission

                echo "Directory initiated..." . PHP_EOL;

                //handle index.html file for new directory
                $indexFilePath = $this->dir . $this->project_name . "/index.html";
                $index = fopen($indexFilePath, "w");

                if ($index) {
                    $html = "<!DOCTYPE html>
                        <html>
                            <head>
                              <meta charset='UTF-8'>
                              <title>Powered BY VHOST</title>
                            </head>
                            <body>
                              This site was generated by Devironment
                            </body>
                        </html>";

                    if (fwrite($index, $html) !== false) {
                        chown($indexFilePath, get_current_user());
                    }

                    fclose($index);
                }
            }

            $vhost = fopen('/etc/apache2/sites-available/' . $this->domain . '.conf', "w");
            $conf = '<VirtualHost ' . $this->domain . ':80>
                    <Directory ' . $this->dir . $this->project_name . '>
                        Options Indexes FollowSymLinks MultiViews
                        AllowOverride All
                        Require all granted
                    </Directory>
                    ServerAdmin admin@' . $this->domain . '
                    ServerName ' . $this->domain . '
                    ServerAlias www.' . $this->domain . '
                    DocumentRoot ' . $this->dir . $this->project_name . '
                    ErrorLog ${APACHE_LOG_DIR}/error.log
                </VirtualHost>';
            fwrite($vhost, $conf);
            fclose($vhost);

            echo "Apache config created..." . PHP_EOL;

            $hosts = "/etc/hosts";
            // Read the contents of the file into a string
            $file_contents = file_get_contents($hosts);
            // Prepend the new line to the existing contents
            $new_record = "127.0.0.1	" . $this->domain . PHP_EOL . $file_contents;
            // Write the new contents back to the file
            file_put_contents($hosts, $new_record);

            echo "Added to server hosts..." . PHP_EOL;
            echo "Restarting server..." . PHP_EOL;

            $command = "a2ensite " . $this->domain . ".conf; systemctl reload apache2";
            $restart = shell_exec($command);// create virtual host configuration and enable apache2 site and restart apache2

            if ($restart === null) {
                throw new Exception("Apache failed to restart.");
            }

            echo "Apache Restarted..." . PHP_EOL;

            $message = 'Virtual Host generated successfully. Go to http://' . $this->domain;

        } catch (Exception $e) {
            // Handle the exception
            $message = "An error occurred: " . $e->getMessage();
        }

        return ['status' => 3, 'type' => 'success', 'message' => $message];

    }
}
